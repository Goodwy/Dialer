// Generated by view binder compiler. Do not edit!
package com.goodwy.dialer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.goodwy.commons.views.MyFloatingActionButton;
import com.goodwy.commons.views.MySearchMenu;
import com.goodwy.commons.views.MyViewPager;
import com.goodwy.dialer.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout mainAppBarLayout;

  @NonNull
  public final CoordinatorLayout mainCoordinator;

  @NonNull
  public final MyFloatingActionButton mainDialpadButton;

  @NonNull
  public final ConstraintLayout mainHolder;

  @NonNull
  public final MySearchMenu mainMenu;

  @NonNull
  public final TabLayout mainTabsHolder;

  @NonNull
  public final MaterialToolbar mainToolbar;

  @NonNull
  public final LinearLayout mainTopTabsBackground;

  @NonNull
  public final RelativeLayout mainTopTabsContainer;

  @NonNull
  public final TabLayout mainTopTabsHolder;

  @NonNull
  public final MyViewPager viewPager;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout mainAppBarLayout, @NonNull CoordinatorLayout mainCoordinator,
      @NonNull MyFloatingActionButton mainDialpadButton, @NonNull ConstraintLayout mainHolder,
      @NonNull MySearchMenu mainMenu, @NonNull TabLayout mainTabsHolder,
      @NonNull MaterialToolbar mainToolbar, @NonNull LinearLayout mainTopTabsBackground,
      @NonNull RelativeLayout mainTopTabsContainer, @NonNull TabLayout mainTopTabsHolder,
      @NonNull MyViewPager viewPager) {
    this.rootView = rootView;
    this.mainAppBarLayout = mainAppBarLayout;
    this.mainCoordinator = mainCoordinator;
    this.mainDialpadButton = mainDialpadButton;
    this.mainHolder = mainHolder;
    this.mainMenu = mainMenu;
    this.mainTabsHolder = mainTabsHolder;
    this.mainToolbar = mainToolbar;
    this.mainTopTabsBackground = mainTopTabsBackground;
    this.mainTopTabsContainer = mainTopTabsContainer;
    this.mainTopTabsHolder = mainTopTabsHolder;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.main_app_bar_layout;
      AppBarLayout mainAppBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (mainAppBarLayout == null) {
        break missingId;
      }

      CoordinatorLayout mainCoordinator = (CoordinatorLayout) rootView;

      id = R.id.main_dialpad_button;
      MyFloatingActionButton mainDialpadButton = ViewBindings.findChildViewById(rootView, id);
      if (mainDialpadButton == null) {
        break missingId;
      }

      id = R.id.main_holder;
      ConstraintLayout mainHolder = ViewBindings.findChildViewById(rootView, id);
      if (mainHolder == null) {
        break missingId;
      }

      id = R.id.mainMenu;
      MySearchMenu mainMenu = ViewBindings.findChildViewById(rootView, id);
      if (mainMenu == null) {
        break missingId;
      }

      id = R.id.main_tabs_holder;
      TabLayout mainTabsHolder = ViewBindings.findChildViewById(rootView, id);
      if (mainTabsHolder == null) {
        break missingId;
      }

      id = R.id.mainToolbar;
      MaterialToolbar mainToolbar = ViewBindings.findChildViewById(rootView, id);
      if (mainToolbar == null) {
        break missingId;
      }

      id = R.id.mainTopTabsBackground;
      LinearLayout mainTopTabsBackground = ViewBindings.findChildViewById(rootView, id);
      if (mainTopTabsBackground == null) {
        break missingId;
      }

      id = R.id.main_top_tabs_container;
      RelativeLayout mainTopTabsContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainTopTabsContainer == null) {
        break missingId;
      }

      id = R.id.mainTopTabsHolder;
      TabLayout mainTopTabsHolder = ViewBindings.findChildViewById(rootView, id);
      if (mainTopTabsHolder == null) {
        break missingId;
      }

      id = R.id.viewPager;
      MyViewPager viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, mainAppBarLayout,
          mainCoordinator, mainDialpadButton, mainHolder, mainMenu, mainTabsHolder, mainToolbar,
          mainTopTabsBackground, mainTopTabsContainer, mainTopTabsHolder, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
