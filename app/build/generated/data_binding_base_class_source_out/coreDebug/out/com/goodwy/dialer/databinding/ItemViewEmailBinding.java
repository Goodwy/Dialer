// Generated by view binder compiler. Do not edit!
package com.goodwy.dialer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.goodwy.commons.views.MyTextView;
import com.goodwy.dialer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemViewEmailBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView contactEmail;

  @NonNull
  public final RelativeLayout contactEmailHolder;

  @NonNull
  public final ImageView contactEmailIcon;

  @NonNull
  public final MyTextView contactEmailType;

  @NonNull
  public final RelativeLayout contactHolder;

  @NonNull
  public final ImageView dividerContactEmail;

  private ItemViewEmailBinding(@NonNull RelativeLayout rootView, @NonNull TextView contactEmail,
      @NonNull RelativeLayout contactEmailHolder, @NonNull ImageView contactEmailIcon,
      @NonNull MyTextView contactEmailType, @NonNull RelativeLayout contactHolder,
      @NonNull ImageView dividerContactEmail) {
    this.rootView = rootView;
    this.contactEmail = contactEmail;
    this.contactEmailHolder = contactEmailHolder;
    this.contactEmailIcon = contactEmailIcon;
    this.contactEmailType = contactEmailType;
    this.contactHolder = contactHolder;
    this.dividerContactEmail = dividerContactEmail;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemViewEmailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemViewEmailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_view_email, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemViewEmailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contact_email;
      TextView contactEmail = ViewBindings.findChildViewById(rootView, id);
      if (contactEmail == null) {
        break missingId;
      }

      RelativeLayout contactEmailHolder = (RelativeLayout) rootView;

      id = R.id.contact_email_icon;
      ImageView contactEmailIcon = ViewBindings.findChildViewById(rootView, id);
      if (contactEmailIcon == null) {
        break missingId;
      }

      id = R.id.contact_email_type;
      MyTextView contactEmailType = ViewBindings.findChildViewById(rootView, id);
      if (contactEmailType == null) {
        break missingId;
      }

      id = R.id.contact_holder;
      RelativeLayout contactHolder = ViewBindings.findChildViewById(rootView, id);
      if (contactHolder == null) {
        break missingId;
      }

      id = R.id.divider_contact_email;
      ImageView dividerContactEmail = ViewBindings.findChildViewById(rootView, id);
      if (dividerContactEmail == null) {
        break missingId;
      }

      return new ItemViewEmailBinding((RelativeLayout) rootView, contactEmail, contactEmailHolder,
          contactEmailIcon, contactEmailType, contactHolder, dividerContactEmail);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
