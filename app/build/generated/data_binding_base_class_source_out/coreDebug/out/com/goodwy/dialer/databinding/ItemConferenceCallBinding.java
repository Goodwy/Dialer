// Generated by view binder compiler. Do not edit!
package com.goodwy.dialer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.goodwy.commons.views.MyTextView;
import com.goodwy.dialer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemConferenceCallBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton itemConferenceCallEnd;

  @NonNull
  public final ImageView itemConferenceCallImage;

  @NonNull
  public final ImageView itemConferenceCallImageIcon;

  @NonNull
  public final MyTextView itemConferenceCallName;

  @NonNull
  public final ImageButton itemConferenceCallSplit;

  private ItemConferenceCallBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton itemConferenceCallEnd, @NonNull ImageView itemConferenceCallImage,
      @NonNull ImageView itemConferenceCallImageIcon, @NonNull MyTextView itemConferenceCallName,
      @NonNull ImageButton itemConferenceCallSplit) {
    this.rootView = rootView;
    this.itemConferenceCallEnd = itemConferenceCallEnd;
    this.itemConferenceCallImage = itemConferenceCallImage;
    this.itemConferenceCallImageIcon = itemConferenceCallImageIcon;
    this.itemConferenceCallName = itemConferenceCallName;
    this.itemConferenceCallSplit = itemConferenceCallSplit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemConferenceCallBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemConferenceCallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_conference_call, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemConferenceCallBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.itemConferenceCallEnd;
      ImageButton itemConferenceCallEnd = ViewBindings.findChildViewById(rootView, id);
      if (itemConferenceCallEnd == null) {
        break missingId;
      }

      id = R.id.itemConferenceCallImage;
      ImageView itemConferenceCallImage = ViewBindings.findChildViewById(rootView, id);
      if (itemConferenceCallImage == null) {
        break missingId;
      }

      id = R.id.itemConferenceCallImageIcon;
      ImageView itemConferenceCallImageIcon = ViewBindings.findChildViewById(rootView, id);
      if (itemConferenceCallImageIcon == null) {
        break missingId;
      }

      id = R.id.itemConferenceCallName;
      MyTextView itemConferenceCallName = ViewBindings.findChildViewById(rootView, id);
      if (itemConferenceCallName == null) {
        break missingId;
      }

      id = R.id.itemConferenceCallSplit;
      ImageButton itemConferenceCallSplit = ViewBindings.findChildViewById(rootView, id);
      if (itemConferenceCallSplit == null) {
        break missingId;
      }

      return new ItemConferenceCallBinding((ConstraintLayout) rootView, itemConferenceCallEnd,
          itemConferenceCallImage, itemConferenceCallImageIcon, itemConferenceCallName,
          itemConferenceCallSplit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
