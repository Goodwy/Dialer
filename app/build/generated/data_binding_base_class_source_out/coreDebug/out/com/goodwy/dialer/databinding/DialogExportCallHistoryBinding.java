// Generated by view binder compiler. Do not edit!
package com.goodwy.dialer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.goodwy.commons.views.MyTextInputLayout;
import com.goodwy.dialer.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogExportCallHistoryBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputEditText exportCallHistoryFilename;

  @NonNull
  public final MyTextInputLayout exportCallHistoryFilenameHint;

  @NonNull
  public final LinearLayout exportCallHistoryHolder;

  @NonNull
  public final ScrollView exportContactsScrollview;

  private DialogExportCallHistoryBinding(@NonNull ScrollView rootView,
      @NonNull TextInputEditText exportCallHistoryFilename,
      @NonNull MyTextInputLayout exportCallHistoryFilenameHint,
      @NonNull LinearLayout exportCallHistoryHolder, @NonNull ScrollView exportContactsScrollview) {
    this.rootView = rootView;
    this.exportCallHistoryFilename = exportCallHistoryFilename;
    this.exportCallHistoryFilenameHint = exportCallHistoryFilenameHint;
    this.exportCallHistoryHolder = exportCallHistoryHolder;
    this.exportContactsScrollview = exportContactsScrollview;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogExportCallHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogExportCallHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_export_call_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogExportCallHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.export_call_history_filename;
      TextInputEditText exportCallHistoryFilename = ViewBindings.findChildViewById(rootView, id);
      if (exportCallHistoryFilename == null) {
        break missingId;
      }

      id = R.id.export_call_history_filename_hint;
      MyTextInputLayout exportCallHistoryFilenameHint = ViewBindings.findChildViewById(rootView, id);
      if (exportCallHistoryFilenameHint == null) {
        break missingId;
      }

      id = R.id.export_call_history_holder;
      LinearLayout exportCallHistoryHolder = ViewBindings.findChildViewById(rootView, id);
      if (exportCallHistoryHolder == null) {
        break missingId;
      }

      ScrollView exportContactsScrollview = (ScrollView) rootView;

      return new DialogExportCallHistoryBinding((ScrollView) rootView, exportCallHistoryFilename,
          exportCallHistoryFilenameHint, exportCallHistoryHolder, exportContactsScrollview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
