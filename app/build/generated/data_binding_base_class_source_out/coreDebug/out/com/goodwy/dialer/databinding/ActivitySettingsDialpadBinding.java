// Generated by view binder compiler. Do not edit!
package com.goodwy.dialer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.goodwy.commons.views.MySeekBar;
import com.goodwy.commons.views.MySwitchCompat;
import com.goodwy.commons.views.MyTextView;
import com.goodwy.dialer.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsDialpadBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MyTextView aboutAppVersion;

  @NonNull
  public final MySeekBar buttonSecondSize;

  @NonNull
  public final RelativeLayout buttonSecondSizeHolder;

  @NonNull
  public final MyTextView buttonSecondSizeLabel;

  @NonNull
  public final ImageView buttonSecondSizeMinus;

  @NonNull
  public final ImageView buttonSecondSizePlus;

  @NonNull
  public final MyTextView buttonSecondSizeValue;

  @NonNull
  public final MySeekBar buttonSize;

  @NonNull
  public final LinearLayout buttonSizeEmpty;

  @NonNull
  public final RelativeLayout buttonSizeHolder;

  @NonNull
  public final MyTextView buttonSizeLabel;

  @NonNull
  public final ImageView buttonSizeMinus;

  @NonNull
  public final ImageView buttonSizePlus;

  @NonNull
  public final MyTextView buttonSizeValue;

  @NonNull
  public final ConstraintLayout buttonSizeWrapper;

  @NonNull
  public final DialpadGridBinding dialpadClearWrapper;

  @NonNull
  public final CoordinatorLayout dialpadCoordinator;

  @NonNull
  public final TextView dialpadDivider;

  @NonNull
  public final ConstraintLayout dialpadHolder;

  @NonNull
  public final NestedScrollView dialpadNestedScrollview;

  @NonNull
  public final RelativeLayout dialpadPurchaseThankYouHolder;

  @NonNull
  public final DialpadRectangleBinding dialpadRectWrapper;

  @NonNull
  public final DialpadRoundBinding dialpadRoundWrapper;

  @NonNull
  public final LinearLayout dialpadSettingsHolder;

  @NonNull
  public final LinearLayout dialpadSettingsWrapper;

  @NonNull
  public final MySeekBar dialpadSize;

  @NonNull
  public final RelativeLayout dialpadSizeHolder;

  @NonNull
  public final MyTextView dialpadSizeLabel;

  @NonNull
  public final ImageView dialpadSizeMinus;

  @NonNull
  public final ImageView dialpadSizePlus;

  @NonNull
  public final MyTextView dialpadSizeValue;

  @NonNull
  public final LinearLayout dialpadSizeWrapper;

  @NonNull
  public final MaterialToolbar dialpadToolbar;

  @NonNull
  public final AppCompatButton moreButton;

  @NonNull
  public final ImageView purchaseLogo;

  @NonNull
  public final MySwitchCompat settingsDialpadBeeps;

  @NonNull
  public final RelativeLayout settingsDialpadBeepsHolder;

  @NonNull
  public final MyTextView settingsDialpadStyle;

  @NonNull
  public final RelativeLayout settingsDialpadStyleHolder;

  @NonNull
  public final MyTextView settingsDialpadStyleLabel;

  @NonNull
  public final MySwitchCompat settingsDialpadVibration;

  @NonNull
  public final RelativeLayout settingsDialpadVibrationHolder;

  @NonNull
  public final MySwitchCompat settingsHideDialpadLetters;

  @NonNull
  public final RelativeLayout settingsHideDialpadLettersHolder;

  @NonNull
  public final MyTextView settingsPrimarySimCard;

  @NonNull
  public final RelativeLayout settingsPrimarySimCardHolder;

  @NonNull
  public final MyTextView settingsPrimarySimCardLabel;

  @NonNull
  public final MyTextView settingsPurchaseThankYou;

  @NonNull
  public final LinearLayout styleHolder;

  private ActivitySettingsDialpadBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MyTextView aboutAppVersion, @NonNull MySeekBar buttonSecondSize,
      @NonNull RelativeLayout buttonSecondSizeHolder, @NonNull MyTextView buttonSecondSizeLabel,
      @NonNull ImageView buttonSecondSizeMinus, @NonNull ImageView buttonSecondSizePlus,
      @NonNull MyTextView buttonSecondSizeValue, @NonNull MySeekBar buttonSize,
      @NonNull LinearLayout buttonSizeEmpty, @NonNull RelativeLayout buttonSizeHolder,
      @NonNull MyTextView buttonSizeLabel, @NonNull ImageView buttonSizeMinus,
      @NonNull ImageView buttonSizePlus, @NonNull MyTextView buttonSizeValue,
      @NonNull ConstraintLayout buttonSizeWrapper, @NonNull DialpadGridBinding dialpadClearWrapper,
      @NonNull CoordinatorLayout dialpadCoordinator, @NonNull TextView dialpadDivider,
      @NonNull ConstraintLayout dialpadHolder, @NonNull NestedScrollView dialpadNestedScrollview,
      @NonNull RelativeLayout dialpadPurchaseThankYouHolder,
      @NonNull DialpadRectangleBinding dialpadRectWrapper,
      @NonNull DialpadRoundBinding dialpadRoundWrapper, @NonNull LinearLayout dialpadSettingsHolder,
      @NonNull LinearLayout dialpadSettingsWrapper, @NonNull MySeekBar dialpadSize,
      @NonNull RelativeLayout dialpadSizeHolder, @NonNull MyTextView dialpadSizeLabel,
      @NonNull ImageView dialpadSizeMinus, @NonNull ImageView dialpadSizePlus,
      @NonNull MyTextView dialpadSizeValue, @NonNull LinearLayout dialpadSizeWrapper,
      @NonNull MaterialToolbar dialpadToolbar, @NonNull AppCompatButton moreButton,
      @NonNull ImageView purchaseLogo, @NonNull MySwitchCompat settingsDialpadBeeps,
      @NonNull RelativeLayout settingsDialpadBeepsHolder, @NonNull MyTextView settingsDialpadStyle,
      @NonNull RelativeLayout settingsDialpadStyleHolder,
      @NonNull MyTextView settingsDialpadStyleLabel,
      @NonNull MySwitchCompat settingsDialpadVibration,
      @NonNull RelativeLayout settingsDialpadVibrationHolder,
      @NonNull MySwitchCompat settingsHideDialpadLetters,
      @NonNull RelativeLayout settingsHideDialpadLettersHolder,
      @NonNull MyTextView settingsPrimarySimCard,
      @NonNull RelativeLayout settingsPrimarySimCardHolder,
      @NonNull MyTextView settingsPrimarySimCardLabel, @NonNull MyTextView settingsPurchaseThankYou,
      @NonNull LinearLayout styleHolder) {
    this.rootView = rootView;
    this.aboutAppVersion = aboutAppVersion;
    this.buttonSecondSize = buttonSecondSize;
    this.buttonSecondSizeHolder = buttonSecondSizeHolder;
    this.buttonSecondSizeLabel = buttonSecondSizeLabel;
    this.buttonSecondSizeMinus = buttonSecondSizeMinus;
    this.buttonSecondSizePlus = buttonSecondSizePlus;
    this.buttonSecondSizeValue = buttonSecondSizeValue;
    this.buttonSize = buttonSize;
    this.buttonSizeEmpty = buttonSizeEmpty;
    this.buttonSizeHolder = buttonSizeHolder;
    this.buttonSizeLabel = buttonSizeLabel;
    this.buttonSizeMinus = buttonSizeMinus;
    this.buttonSizePlus = buttonSizePlus;
    this.buttonSizeValue = buttonSizeValue;
    this.buttonSizeWrapper = buttonSizeWrapper;
    this.dialpadClearWrapper = dialpadClearWrapper;
    this.dialpadCoordinator = dialpadCoordinator;
    this.dialpadDivider = dialpadDivider;
    this.dialpadHolder = dialpadHolder;
    this.dialpadNestedScrollview = dialpadNestedScrollview;
    this.dialpadPurchaseThankYouHolder = dialpadPurchaseThankYouHolder;
    this.dialpadRectWrapper = dialpadRectWrapper;
    this.dialpadRoundWrapper = dialpadRoundWrapper;
    this.dialpadSettingsHolder = dialpadSettingsHolder;
    this.dialpadSettingsWrapper = dialpadSettingsWrapper;
    this.dialpadSize = dialpadSize;
    this.dialpadSizeHolder = dialpadSizeHolder;
    this.dialpadSizeLabel = dialpadSizeLabel;
    this.dialpadSizeMinus = dialpadSizeMinus;
    this.dialpadSizePlus = dialpadSizePlus;
    this.dialpadSizeValue = dialpadSizeValue;
    this.dialpadSizeWrapper = dialpadSizeWrapper;
    this.dialpadToolbar = dialpadToolbar;
    this.moreButton = moreButton;
    this.purchaseLogo = purchaseLogo;
    this.settingsDialpadBeeps = settingsDialpadBeeps;
    this.settingsDialpadBeepsHolder = settingsDialpadBeepsHolder;
    this.settingsDialpadStyle = settingsDialpadStyle;
    this.settingsDialpadStyleHolder = settingsDialpadStyleHolder;
    this.settingsDialpadStyleLabel = settingsDialpadStyleLabel;
    this.settingsDialpadVibration = settingsDialpadVibration;
    this.settingsDialpadVibrationHolder = settingsDialpadVibrationHolder;
    this.settingsHideDialpadLetters = settingsHideDialpadLetters;
    this.settingsHideDialpadLettersHolder = settingsHideDialpadLettersHolder;
    this.settingsPrimarySimCard = settingsPrimarySimCard;
    this.settingsPrimarySimCardHolder = settingsPrimarySimCardHolder;
    this.settingsPrimarySimCardLabel = settingsPrimarySimCardLabel;
    this.settingsPurchaseThankYou = settingsPurchaseThankYou;
    this.styleHolder = styleHolder;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsDialpadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsDialpadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings_dialpad, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsDialpadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about_app_version;
      MyTextView aboutAppVersion = ViewBindings.findChildViewById(rootView, id);
      if (aboutAppVersion == null) {
        break missingId;
      }

      id = R.id.buttonSecondSize;
      MySeekBar buttonSecondSize = ViewBindings.findChildViewById(rootView, id);
      if (buttonSecondSize == null) {
        break missingId;
      }

      id = R.id.buttonSecondSizeHolder;
      RelativeLayout buttonSecondSizeHolder = ViewBindings.findChildViewById(rootView, id);
      if (buttonSecondSizeHolder == null) {
        break missingId;
      }

      id = R.id.buttonSecondSizeLabel;
      MyTextView buttonSecondSizeLabel = ViewBindings.findChildViewById(rootView, id);
      if (buttonSecondSizeLabel == null) {
        break missingId;
      }

      id = R.id.buttonSecondSizeMinus;
      ImageView buttonSecondSizeMinus = ViewBindings.findChildViewById(rootView, id);
      if (buttonSecondSizeMinus == null) {
        break missingId;
      }

      id = R.id.buttonSecondSizePlus;
      ImageView buttonSecondSizePlus = ViewBindings.findChildViewById(rootView, id);
      if (buttonSecondSizePlus == null) {
        break missingId;
      }

      id = R.id.buttonSecondSizeValue;
      MyTextView buttonSecondSizeValue = ViewBindings.findChildViewById(rootView, id);
      if (buttonSecondSizeValue == null) {
        break missingId;
      }

      id = R.id.buttonSize;
      MySeekBar buttonSize = ViewBindings.findChildViewById(rootView, id);
      if (buttonSize == null) {
        break missingId;
      }

      id = R.id.buttonSizeEmpty;
      LinearLayout buttonSizeEmpty = ViewBindings.findChildViewById(rootView, id);
      if (buttonSizeEmpty == null) {
        break missingId;
      }

      id = R.id.buttonSizeHolder;
      RelativeLayout buttonSizeHolder = ViewBindings.findChildViewById(rootView, id);
      if (buttonSizeHolder == null) {
        break missingId;
      }

      id = R.id.buttonSizeLabel;
      MyTextView buttonSizeLabel = ViewBindings.findChildViewById(rootView, id);
      if (buttonSizeLabel == null) {
        break missingId;
      }

      id = R.id.buttonSizeMinus;
      ImageView buttonSizeMinus = ViewBindings.findChildViewById(rootView, id);
      if (buttonSizeMinus == null) {
        break missingId;
      }

      id = R.id.buttonSizePlus;
      ImageView buttonSizePlus = ViewBindings.findChildViewById(rootView, id);
      if (buttonSizePlus == null) {
        break missingId;
      }

      id = R.id.buttonSizeValue;
      MyTextView buttonSizeValue = ViewBindings.findChildViewById(rootView, id);
      if (buttonSizeValue == null) {
        break missingId;
      }

      id = R.id.buttonSizeWrapper;
      ConstraintLayout buttonSizeWrapper = ViewBindings.findChildViewById(rootView, id);
      if (buttonSizeWrapper == null) {
        break missingId;
      }

      id = R.id.dialpadClearWrapper;
      View dialpadClearWrapper = ViewBindings.findChildViewById(rootView, id);
      if (dialpadClearWrapper == null) {
        break missingId;
      }
      DialpadGridBinding binding_dialpadClearWrapper = DialpadGridBinding.bind(dialpadClearWrapper);

      CoordinatorLayout dialpadCoordinator = (CoordinatorLayout) rootView;

      id = R.id.dialpad_divider;
      TextView dialpadDivider = ViewBindings.findChildViewById(rootView, id);
      if (dialpadDivider == null) {
        break missingId;
      }

      id = R.id.dialpad_holder;
      ConstraintLayout dialpadHolder = ViewBindings.findChildViewById(rootView, id);
      if (dialpadHolder == null) {
        break missingId;
      }

      id = R.id.dialpad_nested_scrollview;
      NestedScrollView dialpadNestedScrollview = ViewBindings.findChildViewById(rootView, id);
      if (dialpadNestedScrollview == null) {
        break missingId;
      }

      id = R.id.dialpad_purchase_thank_you_holder;
      RelativeLayout dialpadPurchaseThankYouHolder = ViewBindings.findChildViewById(rootView, id);
      if (dialpadPurchaseThankYouHolder == null) {
        break missingId;
      }

      id = R.id.dialpadRectWrapper;
      View dialpadRectWrapper = ViewBindings.findChildViewById(rootView, id);
      if (dialpadRectWrapper == null) {
        break missingId;
      }
      DialpadRectangleBinding binding_dialpadRectWrapper = DialpadRectangleBinding.bind(dialpadRectWrapper);

      id = R.id.dialpadRoundWrapper;
      View dialpadRoundWrapper = ViewBindings.findChildViewById(rootView, id);
      if (dialpadRoundWrapper == null) {
        break missingId;
      }
      DialpadRoundBinding binding_dialpadRoundWrapper = DialpadRoundBinding.bind(dialpadRoundWrapper);

      id = R.id.dialpad_settings_holder;
      LinearLayout dialpadSettingsHolder = ViewBindings.findChildViewById(rootView, id);
      if (dialpadSettingsHolder == null) {
        break missingId;
      }

      id = R.id.dialpadSettingsWrapper;
      LinearLayout dialpadSettingsWrapper = ViewBindings.findChildViewById(rootView, id);
      if (dialpadSettingsWrapper == null) {
        break missingId;
      }

      id = R.id.dialpadSize;
      MySeekBar dialpadSize = ViewBindings.findChildViewById(rootView, id);
      if (dialpadSize == null) {
        break missingId;
      }

      id = R.id.dialpadSizeHolder;
      RelativeLayout dialpadSizeHolder = ViewBindings.findChildViewById(rootView, id);
      if (dialpadSizeHolder == null) {
        break missingId;
      }

      id = R.id.dialpadSizeLabel;
      MyTextView dialpadSizeLabel = ViewBindings.findChildViewById(rootView, id);
      if (dialpadSizeLabel == null) {
        break missingId;
      }

      id = R.id.dialpadSizeMinus;
      ImageView dialpadSizeMinus = ViewBindings.findChildViewById(rootView, id);
      if (dialpadSizeMinus == null) {
        break missingId;
      }

      id = R.id.dialpadSizePlus;
      ImageView dialpadSizePlus = ViewBindings.findChildViewById(rootView, id);
      if (dialpadSizePlus == null) {
        break missingId;
      }

      id = R.id.dialpadSizeValue;
      MyTextView dialpadSizeValue = ViewBindings.findChildViewById(rootView, id);
      if (dialpadSizeValue == null) {
        break missingId;
      }

      id = R.id.dialpadSizeWrapper;
      LinearLayout dialpadSizeWrapper = ViewBindings.findChildViewById(rootView, id);
      if (dialpadSizeWrapper == null) {
        break missingId;
      }

      id = R.id.dialpad_toolbar;
      MaterialToolbar dialpadToolbar = ViewBindings.findChildViewById(rootView, id);
      if (dialpadToolbar == null) {
        break missingId;
      }

      id = R.id.moreButton;
      AppCompatButton moreButton = ViewBindings.findChildViewById(rootView, id);
      if (moreButton == null) {
        break missingId;
      }

      id = R.id.purchase_logo;
      ImageView purchaseLogo = ViewBindings.findChildViewById(rootView, id);
      if (purchaseLogo == null) {
        break missingId;
      }

      id = R.id.settings_dialpad_beeps;
      MySwitchCompat settingsDialpadBeeps = ViewBindings.findChildViewById(rootView, id);
      if (settingsDialpadBeeps == null) {
        break missingId;
      }

      id = R.id.settings_dialpad_beeps_holder;
      RelativeLayout settingsDialpadBeepsHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsDialpadBeepsHolder == null) {
        break missingId;
      }

      id = R.id.settings_dialpad_style;
      MyTextView settingsDialpadStyle = ViewBindings.findChildViewById(rootView, id);
      if (settingsDialpadStyle == null) {
        break missingId;
      }

      id = R.id.settings_dialpad_style_holder;
      RelativeLayout settingsDialpadStyleHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsDialpadStyleHolder == null) {
        break missingId;
      }

      id = R.id.settings_dialpad_style_label;
      MyTextView settingsDialpadStyleLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsDialpadStyleLabel == null) {
        break missingId;
      }

      id = R.id.settings_dialpad_vibration;
      MySwitchCompat settingsDialpadVibration = ViewBindings.findChildViewById(rootView, id);
      if (settingsDialpadVibration == null) {
        break missingId;
      }

      id = R.id.settings_dialpad_vibration_holder;
      RelativeLayout settingsDialpadVibrationHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsDialpadVibrationHolder == null) {
        break missingId;
      }

      id = R.id.settingsHideDialpadLetters;
      MySwitchCompat settingsHideDialpadLetters = ViewBindings.findChildViewById(rootView, id);
      if (settingsHideDialpadLetters == null) {
        break missingId;
      }

      id = R.id.settingsHideDialpadLettersHolder;
      RelativeLayout settingsHideDialpadLettersHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsHideDialpadLettersHolder == null) {
        break missingId;
      }

      id = R.id.settingsPrimarySimCard;
      MyTextView settingsPrimarySimCard = ViewBindings.findChildViewById(rootView, id);
      if (settingsPrimarySimCard == null) {
        break missingId;
      }

      id = R.id.settingsPrimarySimCardHolder;
      RelativeLayout settingsPrimarySimCardHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsPrimarySimCardHolder == null) {
        break missingId;
      }

      id = R.id.settingsPrimarySimCardLabel;
      MyTextView settingsPrimarySimCardLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsPrimarySimCardLabel == null) {
        break missingId;
      }

      id = R.id.settings_purchase_thank_you;
      MyTextView settingsPurchaseThankYou = ViewBindings.findChildViewById(rootView, id);
      if (settingsPurchaseThankYou == null) {
        break missingId;
      }

      id = R.id.styleHolder;
      LinearLayout styleHolder = ViewBindings.findChildViewById(rootView, id);
      if (styleHolder == null) {
        break missingId;
      }

      return new ActivitySettingsDialpadBinding((CoordinatorLayout) rootView, aboutAppVersion,
          buttonSecondSize, buttonSecondSizeHolder, buttonSecondSizeLabel, buttonSecondSizeMinus,
          buttonSecondSizePlus, buttonSecondSizeValue, buttonSize, buttonSizeEmpty,
          buttonSizeHolder, buttonSizeLabel, buttonSizeMinus, buttonSizePlus, buttonSizeValue,
          buttonSizeWrapper, binding_dialpadClearWrapper, dialpadCoordinator, dialpadDivider,
          dialpadHolder, dialpadNestedScrollview, dialpadPurchaseThankYouHolder,
          binding_dialpadRectWrapper, binding_dialpadRoundWrapper, dialpadSettingsHolder,
          dialpadSettingsWrapper, dialpadSize, dialpadSizeHolder, dialpadSizeLabel,
          dialpadSizeMinus, dialpadSizePlus, dialpadSizeValue, dialpadSizeWrapper, dialpadToolbar,
          moreButton, purchaseLogo, settingsDialpadBeeps, settingsDialpadBeepsHolder,
          settingsDialpadStyle, settingsDialpadStyleHolder, settingsDialpadStyleLabel,
          settingsDialpadVibration, settingsDialpadVibrationHolder, settingsHideDialpadLetters,
          settingsHideDialpadLettersHolder, settingsPrimarySimCard, settingsPrimarySimCardHolder,
          settingsPrimarySimCardLabel, settingsPurchaseThankYou, styleHolder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
